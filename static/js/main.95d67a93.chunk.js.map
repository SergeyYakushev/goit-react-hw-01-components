{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistic/Statistic.module.css","components/FriendList/FriendListItem/FriendListItem.module.css","components/Conteiner/Conteiner.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Conteiner/Conteiner.jsx","components/Profile/Profile.jsx","components/Statistic/Statistic.jsx","components/FriendList/FriendListItem/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","index.js"],"names":["module","exports","Conteiner","children","className","s","conteiner","Profile","name","tag","location","avatar","stats","followers","views","likes","profile","description","src","alt","label","quantity","getRandomColor","Math","floor","random","toString","substr","Statistic","title","statistics","stat_list","map","id","percentage","item","style","backgroundColor","FriendListItem","styleStatus","isOnline","active","noActive","width","defaultProps","FriendList","friends","friend","TransactionHistory","items","transaction_history","type","amount","currency","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,KAAO,sBAAsB,IAAM,qBAAqB,SAAW,0BAA0B,MAAQ,uBAAuB,MAAQ,uBAAuB,SAAW,4B,iBCAvSD,EAAOC,QAAU,CAAC,WAAa,8BAA8B,MAAQ,yBAAyB,UAAY,6BAA6B,KAAO,wBAAwB,MAAQ,yBAAyB,WAAa,gC,gBCApND,EAAOC,QAAU,CAAC,KAAO,6BAA6B,OAAS,+BAA+B,OAAS,4DAA4D,SAAW,8DAA8D,OAAS,+BAA+B,KAAO,+B,8PCA3RD,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,oBAAsB,kD,y9FCMzBC,MAJf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,gBCkDxBI,MAlDf,YAMI,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,IACAC,EAGC,EAHDA,SAGC,IAFDC,cAEC,MAFQ,iEAER,MADDC,MAASC,EACR,EADQA,UAAWC,EACnB,EADmBA,MAAOC,EAC1B,EAD0BA,MAE3B,OACE,sBAAKX,UAAWC,IAAEW,QAAlB,UACE,sBAAKZ,UAAWC,IAAEY,YAAlB,UACE,qBACEC,IAAKP,EACLQ,IAAG,wHAAyBX,GAC5BJ,UAAWC,IAAEM,SAEf,mBAAGP,UAAWC,IAAEG,KAAhB,SAAuBA,IACvB,mBAAGJ,UAAWC,IAAEI,IAAhB,qBAA2BA,KAC3B,mBAAGL,UAAWC,IAAEK,SAAhB,SAA2BA,OAG7B,qBAAIN,UAAWC,IAAEO,MAAjB,UACE,+BACE,sBAAMR,UAAWC,IAAEe,MAAnB,uBACA,sBAAMhB,UAAWC,IAAEgB,SAAnB,SAA8BR,OAEhC,+BACE,sBAAMT,UAAWC,IAAEe,MAAnB,mBACA,sBAAMhB,UAAWC,IAAEgB,SAAnB,SAA8BP,OAEhC,+BACE,sBAAMV,UAAWC,IAAEe,MAAnB,mBACA,sBAAMhB,UAAWC,IAAEgB,SAAnB,SAA8BN,c,gBCVxC,SAASO,IAEP,MAAO,KAAO,SADJC,KAAKC,MAAsB,SAAhBD,KAAKE,UACGC,SAAS,KAAKC,QAAQ,GAQtCC,MA/Bf,YAAsC,IAAjBC,EAAgB,EAAhBA,MAAOjB,EAAS,EAATA,MAC1B,OACE,0BAASR,UAAWC,IAAEyB,WAAtB,UACG,CAAED,UAAW,oBAAIzB,UAAWC,IAAEwB,MAAjB,SAAyBA,IAEvC,oBAAIzB,UAAWC,IAAE0B,UAAjB,SACGnB,EAAMoB,KAAI,gBAAGC,EAAH,EAAGA,GAAIb,EAAP,EAAOA,MAAOc,EAAd,EAAcA,WAAd,OACT,qBACE9B,UAAWC,IAAE8B,KAEbC,MAAO,CAAEC,gBAAiBf,KAH5B,UAKE,sBAAMlB,UAAWC,IAAEe,MAAnB,SAA2BA,IAC3B,uBAAMhB,UAAWC,IAAE6B,WAAnB,UAAgCA,EAAhC,SAJKD,Y,gBCTjB,SAASK,EAAT,GAAqD,IAA3B3B,EAA0B,EAA1BA,OAAQH,EAAkB,EAAlBA,KAC1B+B,GAA2B,IADiB,EAAZC,SACEnC,IAAEoC,OAASpC,IAAEqC,SACrD,OACE,qBAAItC,UAAWC,IAAE8B,KAAjB,UACE,sBAAM/B,UAAWmC,IACjB,qBACEnC,UAAWC,IAAEM,OACbO,IAAKP,EACLQ,IAAG,wHAAyBX,GAC5BmC,MAAM,OAER,mBAAGvC,UAAWC,IAAEG,KAAhB,SAAuBA,OAK7B8B,EAAeM,aAAe,CAC5BpC,KAAM,OACNG,OAAQ,iEACR6B,UAAU,GASGF,QC3Bf,SAASO,EAAT,GAAkC,IAAZC,EAAW,EAAXA,QACpB,OACE,6BACGA,EAAQd,KAAI,SAAAe,GAAM,OACjB,6BACE,cAAC,EAAD,CACEpC,OAAQoC,EAAOpC,OACfH,KAAMuC,EAAOvC,KACbgC,SAAUO,EAAOP,YAJZO,EAAOd,SAYxBY,EAAWD,aAAe,CACxBE,QAAS,IAWID,Q,gBC7BA,SAASG,EAAT,GAAwC,IAAVC,EAAS,EAATA,MAC3C,OACE,wBAAO7C,UAAWC,IAAE6C,oBAApB,UACE,gCACE,+BACE,sCACA,wCACA,+CAIJ,gCACGD,EAAMjB,KAAI,SAAAG,GAAI,OACb,+BACE,6BAAKA,EAAKgB,OACV,6BAAKhB,EAAKiB,SACV,6BAAKjB,EAAKkB,aAHHlB,EAAKF,YAWxBe,EAAmBJ,aAAe,CAChCK,MAAO,I,mCCjBM,SAASK,IACtB,OACE,gCACE,eAAC,EAAD,WACE,wCACA,cAAC,EAAD,CACE9C,KAAM+C,EAAK/C,KACXC,IAAK8C,EAAK9C,IACVC,SAAU6C,EAAK7C,SACfC,OAAQ4C,EAAK5C,OACbC,MAAO2C,EAAK3C,WAGhB,eAAC,EAAD,WACE,wCACA,cAAC,EAAD,CAAWiB,MAAM,eAAejB,MAAO4C,OAEzC,eAAC,EAAD,WACE,wCACA,cAAC,EAAD,CAAYV,QAASA,OAEvB,eAAC,EAAD,WACE,wCACA,cAACE,EAAD,CAAoBC,MAAOQ,UC9BnCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACN,EAAD,MAEFO,SAASC,eAAe,W","file":"static/js/main.95d67a93.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2bbu1\",\"description\":\"Profile_description__3wX6_\",\"avatar\":\"Profile_avatar__1iOrb\",\"name\":\"Profile_name__2Qfjg\",\"tag\":\"Profile_tag__2aHWv\",\"location\":\"Profile_location__3xL02\",\"stats\":\"Profile_stats__84n-J\",\"label\":\"Profile_label__MskG1\",\"quantity\":\"Profile_quantity__1h10c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistic_statistics__3uwKs\",\"title\":\"Statistic_title__19n4D\",\"stat_list\":\"Statistic_stat_list__Zy24d\",\"item\":\"Statistic_item__1tF-f\",\"label\":\"Statistic_label__2w1EQ\",\"percentage\":\"Statistic_percentage__2kmPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__q8_m-\",\"status\":\"FriendListItem_status__3F50w\",\"active\":\"FriendListItem_active__2sK_R FriendListItem_status__3F50w\",\"noActive\":\"FriendListItem_noActive__1OdQ5 FriendListItem_status__3F50w\",\"avatar\":\"FriendListItem_avatar__yT2nr\",\"name\":\"FriendListItem_name__1GxD1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conteiner\":\"Conteiner_conteiner__2YUFz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction_history\":\"TransactionHistory_transaction_history__1khM3\"};","import React from 'react';\nimport s from './Conteiner.module.css';\n\nfunction Conteiner({ children }) {\n  return <div className={s.conteiner}>{children}</div>;\n}\n\nexport default Conteiner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Profile.module.css';\n\nfunction Profile({\n  name,\n  tag,\n  location,\n  avatar = 'https://www.flaticon.com/svg/static/icons/svg/3135/3135715.svg',\n  stats: { followers, views, likes },\n}) {\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img\n          src={avatar}\n          alt={`Аватар пользователя ${name}`}\n          className={s.avatar}\n        />\n        <p className={s.name}>{name}</p>\n        <p className={s.tag}>{`@ ${tag}`}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li>\n          <span className={s.label}>Followers</span>\n          <span className={s.quantity}>{followers}</span>\n        </li>\n        <li>\n          <span className={s.label}>Views</span>\n          <span className={s.quantity}>{views}</span>\n        </li>\n        <li>\n          <span className={s.label}>Likes</span>\n          <span className={s.quantity}>{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    views: PropTypes.number,\n    likes: PropTypes.number,\n    followers: PropTypes.number,\n  }),\n};\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistic.module.css';\n\nfunction Statistic({ title, stats }) {\n  return (\n    <section className={s.statistics}>\n      {{ title } && <h2 className={s.title}>{title}</h2>}\n\n      <ul className={s.stat_list}>\n        {stats.map(({ id, label, percentage }) => (\n          <li\n            className={s.item}\n            key={id}\n            style={{ backgroundColor: getRandomColor() }}\n          >\n            <span className={s.label}>{label}</span>\n            <span className={s.percentage}>{percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nfunction getRandomColor() {\n  var hex = Math.floor(Math.random() * 0xffffff);\n  return '#' + ('000000' + hex.toString(16)).substr(-6);\n}\n\nStatistic.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.array,\n};\n\nexport default Statistic;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FriendListItem.module.css';\n\nfunction FriendListItem({ avatar, name, isOnline }) {\n  const styleStatus = isOnline === true ? s.active : s.noActive;\n  return (\n    <li className={s.item}>\n      <span className={styleStatus}></span>\n      <img\n        className={s.avatar}\n        src={avatar}\n        alt={`Аватар пользователя ${name}`}\n        width=\"48\"\n      />\n      <p className={s.name}>{name}</p>\n    </li>\n  );\n}\n\nFriendListItem.defaultProps = {\n  name: 'Name',\n  avatar: 'https://www.flaticon.com/svg/static/icons/svg/3135/3135715.svg',\n  isOnline: false,\n};\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport FriendListItem from './FriendListItem';\n\nfunction FriendList({ friends }) {\n  return (\n    <ul>\n      {friends.map(friend => (\n        <li key={friend.id}>\n          <FriendListItem\n            avatar={friend.avatar}\n            name={friend.name}\n            isOnline={friend.isOnline}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFriendList.defaultProps = {\n  friends: [],\n};\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './TransactionHistory.module.css';\n\nexport default function TransactionHistory({ items }) {\n  return (\n    <table className={s.transaction_history}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(item => (\n          <tr key={item.id}>\n            <td>{item.type}</td>\n            <td>{item.amount}</td>\n            <td>{item.currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.defaultProps = {\n  items: [],\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import React from 'react';\nimport Conteiner from './components/Conteiner';\nimport Profile from './components/Profile';\nimport Statistic from './components/Statistic';\nimport FriendList from './components/FriendList';\nimport TransactionHistory from './components/TransactionHistory';\n\nimport user from './json/user.json';\nimport statisticalData from './json/statistical-data.json';\nimport friends from './json/friends.json';\nimport transactions from './json/transactions.json';\n\nexport default function App() {\n  return (\n    <div>\n      <Conteiner>\n        <h2>Task 1</h2>\n        <Profile\n          name={user.name}\n          tag={user.tag}\n          location={user.location}\n          avatar={user.avatar}\n          stats={user.stats}\n        />\n      </Conteiner>\n      <Conteiner>\n        <h2>Task 2</h2>\n        <Statistic title=\"Upload stats\" stats={statisticalData} />\n      </Conteiner>\n      <Conteiner>\n        <h2>Task 3</h2>\n        <FriendList friends={friends} />\n      </Conteiner>\n      <Conteiner>\n        <h2>Task 4</h2>\n        <TransactionHistory items={transactions} />\n      </Conteiner>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}